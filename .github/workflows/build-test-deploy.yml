name: build-test-deploy
on: push
jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout/@v4
      - name: use node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm install
      - run: npm run build
  test:
    needs: build #força rodar depois que o job do build rodar com sucesso, os jobs rodam de forma assincrona, então por padrão um não espera o outro
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout/@v4
      - name: use node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm install
      - run: npm test
  deploy:
    needs: test
    permissions: #permissions determina o que pode fazer
      contents: write 
      pages: write
      id-token: write
    environment:
      name: production
      url: ${{ steps.deployment.output.page_url}} #passa parametro pro environment
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} #passa o token pra ter certeza que ta autenticado
      - name: use node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: configure github pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next #lida com o next.js site
      - run: npm install
      - run: npm run build
      - name: upload artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: './out'  # cria os arquivos que pode ser deployado
      - name: deploy
        id: deployment
        uses: actions/deploy-pages@v4
        
      
  
   
